---
- name: Detect OS type
  ansible.builtin.raw: uname
  register: os_type
  changed_when: false

- name: Set config paths and commands based on OS
  set_fact:
    pw_min_file: >-
      {% if 'AIX' in os_type.stdout %}
        /etc/security/user
      {% elif 'SunOS' in os_type.stdout %}
        /etc/default/passwd
      {% elif 'HP-UX' in os_type.stdout %}
        /etc/default/security
      {% else %}
        /etc/unknown
      {% endif %}
    is_aix: "{{ 'AIX' in os_type.stdout }}"
    is_solaris: "{{ 'SunOS' in os_type.stdout }}"
    is_hpux: "{{ 'HP-UX' in os_type.stdout }}"

# ----------- AIX ----------------
- name: Set AIX password minlen and histsize
  ansible.builtin.raw: |
    if grep -q "^default:" /etc/security/user; then
      sed "/^default:/,/^[^ ]/ s/^ *minlen.*/        minlen = {{ password_minlen }}/" /etc/security/user > /tmp/user && mv /tmp/user /etc/security/user
      sed "/^default:/,/^[^ ]/ s/^ *histsize.*/        histsize = {{ password_history }}/" /etc/security/user > /tmp/user && mv /tmp/user /etc/security/user
    fi
  when: is_aix

# ----------- Solaris ----------------
- name: Set Solaris password MINWEEKS and HISTORY
  ansible.builtin.raw: |
    sed -i "/^MINWEEKS/ c\MINWEEKS={{ password_minlen }}" /etc/default/passwd || echo "MINWEEKS={{ password_minlen }}" >> /etc/default/passwd
    sed -i "/^HISTORY/ c\HISTORY={{ password_history }}" /etc/default/passwd || echo "HISTORY={{ password_history }}" >> /etc/default/passwd
  when: is_solaris

# ----------- HP-UX ----------------
- name: Set HP-UX PASSLENGTH and HISTEXPIRE
  ansible.builtin.raw: |
    sed -i "/^PASSLENGTH/ c\PASSLENGTH={{ password_minlen }}" /etc/default/security || echo "PASSLENGTH={{ password_minlen }}" >> /etc/default/security
    sed -i "/^HISTEXPIRE/ c\HISTEXPIRE={{ password_history }}" /etc/default/security || echo "HISTEXPIRE={{ password_history }}" >> /etc/default/security
  when: is_hpux
